/* Slave processors addresses */

#define MAX_PROCESSORS		8	/* Number of slave processors available in the platform */
#define MAX_LOCAL_TASKS		2	/* Number of task which can be allocated simultaneously in one processor */
#define MAX_GLOBAL_TASKS	MAX_LOCAL_TASKS * MAX_PROCESSORS	/* Number of task which can be allocated simultaneously in the platform */
#define PLASMA	0
#define MBLITE	1
#define PLASMA_PROCESSORS		8
#define MBLITE_PROCESSORS		0
#define XDIMENSION		3
#define YDIMENSION		3
#define MASTERADDRESS		0x00

char pe_free_pages[XDIMENSION][YDIMENSION] = {{MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}, {MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}, {MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}, {MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}, {MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}, {MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS, MAX_LOCAL_TASKS}};

char pe_type[XDIMENSION][YDIMENSION] = {{PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}, {PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}, {PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}, {PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}, {PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}, {PLASMA, PLASMA, PLASMA, PLASMA, PLASMA, PLASMA}};

int total_free_pes = MAX_GLOBAL_TASKS;
int free_plasmas = PLASMA_PROCESSORS * MAX_LOCAL_TASKS;
int free_mblites = MBLITE_PROCESSORS * MAX_LOCAL_TASKS;

void InsertTaskLoc(int id, int processor);
void PageUsed(int proc);

